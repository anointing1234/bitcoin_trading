"""
Django settings for Access_forex project.

Generated by 'django-admin startproject' using Django 5.0.7.



For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""



from pathlib import Path
import os
import environ
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()

environ.Env.read_env(os.path.join(BASE_DIR,'file.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b#&u@^jh3y0ix6l_86h+g3#n08hp+cv^$rm2pb)imb#&rkxx0w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ["*"]
ALLOWED_HOSTS = ["accessconciergefx.com", "www.accessconciergefx.com"]
CSRF_TRUSTED_ORIGINS = ["https://accessconciergefx.com", "https://www.accessconciergefx.com"]



# Application definition
AUTH_USER_MODEL = 'accounts.Account'

INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.filters",
    "unfold.contrib.import_export",
    "unfold.contrib.guardian",
    "unfold.contrib.simple_history",
    "unfold.contrib.forms",
    "unfold.contrib.inlines",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'access',
    'accounts'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Access_forex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Access_forex.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.postgresql',
        'NAME':'access',
        'USER':'postgres',
        'PASSWORD':'1234',
        'HOST':'localhost',  
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': env('DB_NAME'),  
#         'USER': env('DB_USER'),
#         'PASSWORD': env('DB_PASSWORD'),
#         'HOST': env('DB_HOST'),
#         'PORT': env('DB_PORT'),
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'

# if DEBUG:
STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# else:
STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.zoho.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = env('EMAIL_HOST_USER')
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False




# AUTHENTICATION_BACKENDS = [
#     'accounts.authentication.EmailBackend',  # Custom email authentication backend
#     'django.contrib.auth.backends.ModelBackend',  # Keep default for superuser access
# ]



UNFOLD = {
    "SITE_HEADER": "AccessForexConcierge",
    "SHOW_SIDEBAR": True,
    "SITE_TITLE": "AccessForexConcierge",
    "SITE_SUBHEADER": "AccessForexConcierge Admin Panel",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: static("modules/uss-dashboard/GUI/assets/images/logo.png"),
        "dark": lambda request: static("modules/uss-dashboard/GUI/assets/images/logo.png"),
    },
    "SITE_LOGO": {
        "light": lambda request: static("modules/uss-dashboard/GUI/assets/images/logo.png"),
        "dark": lambda request: static("modules/uss-dashboard/GUI/assets/images/logo.png"),
    },
    "DASHBOARD": {
        "show_search": True,
        "show_all_applications": True,
        "cards": [
            {
                "title": _("Users"),
                "icon": "group",
                "link": reverse_lazy("admin:accounts_account_changelist"),
                "description": _("Manage registered users."),
            },
                {
                         "title": _("Payment Gateways"),
                         "icon": "payment",
                         "link": reverse_lazy("admin:accounts_paymentgateway_changelist"),
                     },
                     {
                         "title": _("Deposit Transactions"),
                         "icon": "account_balance",
                         "link": reverse_lazy("admin:accounts_deposittransaction_changelist"),
                     },
                     {
                         "title": _("Withdrawal Transactions"),
                         "icon": "swap_horiz",
                         "link": reverse_lazy("admin:accounts_withdrawtransaction_changelist"),
                 },
        ],
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": _("User Management"),
                "icon": "account_circle",
                "collapsible": False,
                "items": [
                    {
                        "title": _("Users"),
                        "icon": "group",
                        "link": reverse_lazy("admin:accounts_account_changelist")  # Ensure "accounts" is the correct app name,
                    },
                    {
                        "title": _("Account Balances"),
                        "icon": "account_balance_wallet",
                        "link": reverse_lazy("admin:accounts_balance_changelist"),
                    },
                    {
                        "title": _("Forex Plans"),  # Adding Forex Plans to the sidebar
                        "icon": "monetization_on",  # Material Icon for Finance
                        "link": reverse_lazy("admin:accounts_forexplan_changelist"),  # Ensure this matches your Django app name
                    },
                     {
                        "title": _("TingaTinga Robot Plan"),  # Adding Forex Plans to the sidebar
                        "icon": "monetization_on",  # Material Icon for Finance
                        "link": reverse_lazy("admin:accounts_tingatingaplan_changelist"),  # Ensure this matches your Django app name
                    },
                     {
                         "title": _("Wallet Addresses"),
                         "icon": "wallet",
                         "link": reverse_lazy("admin:accounts_walletaddress_changelist"),
                     },
                    #  {
                    #      "title": _("Referrals"),
                    #      "icon": "person_add",
                    #      "link": reverse_lazy("admin:accounts_referral_changelist"),
                    #  },
                    
                ],
            },
            
            {
                "title": _("Financial Services"),
                "icon": "attach_money",
                "collapsible": True,
                "separator": True,
                "items": [
                     {
                         "title": _("Payment Gateways"),
                         "icon": "payment",
                         "link": reverse_lazy("admin:accounts_paymentgateway_changelist"),
                     },
                     {
                         "title": _("Deposit Transactions"),
                         "icon": "account_balance",
                         "link": reverse_lazy("admin:accounts_deposittransaction_changelist"),
                     },
                     {
                         "title": _("Withdrawal Transactions"),
                         "icon": "swap_horiz",
                         "link": reverse_lazy("admin:accounts_withdrawtransaction_changelist"),
                     },
                ],
            },
        ],
    },
}




